const t={},e=[3,0,0,"rc1"],n=`bitty-${e[0]}-${e[1]}`,s=new CSSStyleSheet;function r(){return self.crypto.randomUUID()}s.replaceSync(`${n} { display: block; }`),document.adoptedStyleSheets.push(s);class i extends Error{constructor(t){super(),Error.captureStackTrace&&Error.captureStackTrace(this,i),this.name="BittyError";for(let[e,n]of Object.entries(t))this[e]=n}}class a extends HTMLElement{constructor(){super(),this.config={listeners:["click","input"],copyright:"Copyright 2025 - Alan W. Smith",license:"License at: htttp://bitty.alanwsmith.com/ - 2y1pBoEREr3eWA1ubCCOXdmRCdn",version:e},this.receivers=[]}async connectedCallback(){this.dataset.uuid=r(),await this.makeConnection(),this.conn&&(this.loadFunctions(),this.setIds(),this.conn.api=this,this.handleEventBridge=this.handleEvent.bind(this),this.watchMutations=this.handleMutations.bind(this),this.loadReceivers(),this.addObserver(),this.addEventListeners(),await this.callBittyInit(),this.runSendFromComponent())}addEventListeners(){this.dataset.listeners&&(this.config.listeners=this.dataset.listeners.split("|").map(t=>t.trim())),this.config.listeners.forEach(t=>{document.addEventListener(t,t=>{t.target&&t.target.nodeName.toLowerCase()!==n&&t.target.dataset&&t.target.dataset.send&&(t.uuid=r(),this.handleEventBridge.call(this,t))})})}addObserver(){this.observerConfig={childList:!0,subtree:!0},this.observer=new MutationObserver(this.watchMutations),this.observer.observe(this,this.observerConfig)}addReceiver(t,e){this.conn[t]&&this.receivers.push({key:t,f:n=>{this.conn[t](n,e)}})}async callBittyInit(){"function"==typeof this.conn.bittyInit&&("AsyncFunction"===this.conn.bittyInit[Symbol.toStringTag]?await this.conn.bittyInit():this.conn.bittyInit())}connectedMoveCallback(){}forward(t,e){t&&t.target&&t.target.dataset||(t={type:"bittyforward",target:{dataset:{forward:e}}}),t.target.dataset.forward=e,this.handleEvent(t)}async getElement(t,e=[],n={}){let s=await this.getTXT(t,e,n,"getElement");if(s.error)return s;{const t=document.createElement("template");t.innerHTML=s.ok;return{ok:t.content.cloneNode(!0).firstChild}}}async getFragment(t,e=[],n={}){const s=await this.getTXT(t,e,n,"getFragment");if(s.error)return s;{const t=document.createElement("template");t.innerHTML=s.ok;return{ok:t.content.cloneNode(!0)}}}async getJSON(t,e=[],n={}){const s=await this.getTXT(t,e,n,"getJSON");if(s.error)return s;try{const t=JSON.parse(s.ok);return{ok:t}}catch(t){return{error:new i({type:"parsing"})}}}async getSVG(t,e=[],n={}){const s=await this.getTXT(t,e,n,"getSVG");if(s.error)return s;{const t=document.createElement("template");t.innerHTML=s.ok;return{ok:t.content.cloneNode(!0).querySelector("svg")}}}async getTXT(t,e=[],n={},s="getTXT"){let r=await fetch(t,n);try{if(r.ok){let t=await r.text();e.forEach(e=>{t=t.replaceAll(e[0],e[1])});return{ok:t}}throw new i({type:"fetching",message:`${s}() returned ${r.status} [${r.statusText}] in:\n${s}(${r.url}, ${JSON.stringify(e)}, ${JSON.stringify(n)})`,statusText:r.statusText,status:r.status,url:r.url,incomingMethod:s,subs:e,options:n})}catch(t){return console.error(`BittyError: ${t.message}`),{error:t}}}handleEvent(t){let e=null;t.target.dataset.forward?(e=t.target.dataset.forward,delete t.target.dataset.forward):e=t.target.dataset.send,this.processSignals(t,e)}handleMutations(t,e){for(const e of t)"childList"===e.type&&(e.addedNodes.length>0||e.removedNodes.length>0)&&(this.setIds(),this.loadReceivers())}async loadCSS(t,e,n){const s=await this.getTXT(t,e,n,"loadCSS");if(s.error)return s;{const t=new CSSStyleSheet;t.replaceSync(s.ok),document.adoptedStyleSheets.push(t);return{ok:s.ok}}}loadFunctions(){if(this.fn={},t)for(let[e,n]of Object.entries(t))this.fn[e]=n.bind(this);if(window.bittyFunctions)for(let[t,e]of Object.entries(window.bittyFunctions))this.fn[t]=e.bind(this)}loadReceivers(){this.receivers=[],this.querySelectorAll("[data-receive]").forEach(t=>{t.dataset.receive.split("|").map(t=>t.trim()).forEach(e=>{this.addReceiver(e,t)})})}async makeConnection(){try{if(this.dataset.connect){const t=this.dataset.connect.split("|").map(t=>t.trim());if(void 0!==window[t[0]])this.conn=new window[t[0]];else{const e=await import(t[0]);void 0===t[1]?this.conn=new e.default:this.conn=new e[t[1]]}}else window.BittyClass?this.conn=new window.BittyClass:console.error(`${n} error: No class to connect to.`)}catch(t){console.error(`${n} error: ${t} - ${this.dataset.connect}`)}}makeElement(t,e=[]){e.forEach(e=>{t=t.replaceAll(e[0],e[1])});const n=document.createElement("template");n.innerHTML=t.trim();return n.content.cloneNode(!0).firstChild}makeFragment(t,e=[]){e.forEach(e=>{t=t.replaceAll(e[0],e[1])});const n=document.createElement("template");return n.innerHTML=t,n.content.cloneNode(!0)}match(t,e,n=null){return null===n&&(n="uuid"),void 0!==t.target.dataset[n]&&void 0!==e.dataset[n]&&t.target.dataset[n]===e.dataset[n]}processSignals(t,e){e.split("|").map(t=>t.trim()).forEach(e=>{let n=0;this.receivers.forEach(s=>{s.key===e&&(n+=1,s.f(t))}),0===n&&this.conn[e]&&this.conn[e](t,null)})}runSendFromComponent(){this.dataset.send&&this.handleEvent({type:"bittytagdatasend",uuid:r(),target:this})}setIds(){this.querySelectorAll("*").forEach(t=>{t.dataset.uuid||(t.dataset.uuid=r())})}}customElements.define(n,a);